#!/usr/bin/env bash

# Mount agendata partition
mkdir -p /mnt/agentdata
mount -o ro /dev/disk/by-partlabel/agentdata /mnt/agentdata

# Load registry image
podman load -q -i /mnt/agentdata/images/{{.RegistryFilePath}}

# Create certificate for the local registry
mkdir -p /tmp/certs
openssl req -newkey rsa:4096 -nodes -sha256 -keyout /tmp/certs/domain.key \
    -subj "/C=US/ST=Denial/L=Springfield/O=Dis/CN={{.RegistryDomain}}" \
    -addext "subjectAltName=DNS:{{.RegistryDomain}},DNS:quay.io" \
    -x509 -days 36500 -out /tmp/certs/domain.crt

# Apply certificates
mkdir -p /etc/docker/certs.d/{{.RegistryDomain}}:5000
cp /tmp/certs/domain.crt /etc/docker/certs.d/{{.RegistryDomain}}:5000
cp /tmp/certs/domain.crt /etc/pki/ca-trust/source/anchors/
update-ca-trust extract

# Config registry dns
# TODO: check if worth exposing only locally and/or support IPv6
echo "0.0.0.0 {{.RegistryDomain}}" >> /etc/hosts

if [ {{.IsBootstrapStep}} = true ]; then
  # Copy registry data to RAM
  registry_data=/tmp/registry
  cp -r {{.RegistryDataPath}} $registry_data
  umount /mnt/agentdata
else
  # Use registry data from source
  registry_data={{.RegistryDataPath}}
fi

# Run local registry image
podman rm registry --force
podman run --net=host --privileged -d --name registry \
    -p 5000:5000 -p 5443:5000 \
    -v $registry_data:/var/lib/registry --restart=always \
    -v /tmp/certs:/certs \
    -e REGISTRY_HTTP_ADDR=0.0.0.0:5000 \
    -e REGISTRY_HTTP_TLS_CERTIFICATE=certs/domain.crt \
    -e REGISTRY_HTTP_TLS_KEY=certs/domain.key \
    {{.RegistryImage}}
